{"/home/travis/build/npmtest/node-npmtest-electron-rebuild/test.js":"/* istanbul instrument in package npmtest_electron_rebuild */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-electron-rebuild/lib.npmtest_electron_rebuild.js":"/* istanbul instrument in package npmtest_electron_rebuild */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_electron_rebuild = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_electron_rebuild = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-electron-rebuild/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-electron-rebuild && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_electron_rebuild */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_electron_rebuild\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_electron_rebuild.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_electron_rebuild.rollup.js'] =\n            local.assetsDict['/assets.npmtest_electron_rebuild.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_electron_rebuild.__dirname + '/lib.npmtest_electron_rebuild.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-electron-rebuild/node_modules/electron-rebuild/lib/main.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preGypFixRun = exports.shouldRebuildNativeModules = exports.installNodeHeaders = exports.rebuildNativeModules = exports.default = undefined;\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _rebuild = require('./rebuild');\n\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_rebuild).default;\n  }\n});\nObject.defineProperty(exports, 'rebuildNativeModules', {\n  enumerable: true,\n  get: function get() {\n    return _rebuild.rebuildNativeModules;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar installNodeHeaders = exports.installNodeHeaders = function installNodeHeaders() {\n  return _promise2.default.resolve();\n};\nvar shouldRebuildNativeModules = exports.shouldRebuildNativeModules = function shouldRebuildNativeModules() {\n  return _promise2.default.resolve(true);\n};\nvar preGypFixRun = exports.preGypFixRun = function preGypFixRun() {\n  return _promise2.default.resolve();\n};","/home/travis/build/npmtest/node-npmtest-electron-rebuild/node_modules/electron-rebuild/lib/rebuild.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rebuildNativeModules = undefined;\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _bluebird = require('bluebird');\n\nvar _spawnRx = require('spawn-rx');\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _events = require('events');\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _fsPromise = require('fs-promise');\n\nvar _fsPromise2 = _interopRequireDefault(_fsPromise);\n\nvar _nodeAbi = require('node-abi');\n\nvar _nodeAbi2 = _interopRequireDefault(_nodeAbi);\n\nvar _os = require('os');\n\nvar _os2 = _interopRequireDefault(_os);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _readPackageJson = require('./read-package-json');\n\nvar _readPackageJson2 = _interopRequireDefault(_readPackageJson);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar d = (0, _debug2.default)('electron-rebuild');\n\nvar defaultMode = process.platform === 'win32' ? 'sequential' : 'parallel';\n\nvar locateNodeGyp = function () {\n  var _ref = (0, _bluebird.coroutine)(_regenerator2.default.mark(function _callee() {\n    var testPath, upDir, nodeGypTestPath;\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            testPath = __dirname;\n            upDir = 0;\n\n          case 2:\n            if (!(upDir <= 20)) {\n              _context.next = 12;\n              break;\n            }\n\n            nodeGypTestPath = _path2.default.resolve(testPath, 'node_modules/.bin/node-gyp' + (process.platform === 'win32' ? '.cmd' : ''));\n            _context.next = 6;\n            return _fsPromise2.default.exists(nodeGypTestPath);\n\n          case 6:\n            if (!_context.sent) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt('return', nodeGypTestPath);\n\n          case 8:\n            testPath = _path2.default.resolve(testPath, '..');\n\n          case 9:\n            upDir++;\n            _context.next = 2;\n            break;\n\n          case 12:\n            return _context.abrupt('return', null);\n\n          case 13:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function locateNodeGyp() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _rebuild = function () {\n  var _ref2 = (0, _bluebird.coroutine)(_regenerator2.default.mark(function _callee6(lifecycle, buildPath, electronVersion) {\n    var arch = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : process.arch;\n    var extraModules = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n    var forceRebuild = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    var headerURL = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'https://atom.io/download/electron';\n    var types = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : ['prod', 'optional'];\n    var mode = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : defaultMode;\n\n    var prodDeps, rebuilds, ABI, nodeGypPath, rebuildModuleAt, rebuildAllModulesIn, findModule, markChildrenAsProdDeps, rootPackageJSON, markWaiters, depKeys, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, rebuildFn;\n\n    return _regenerator2.default.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (_path2.default.isAbsolute(buildPath)) {\n              _context6.next = 2;\n              break;\n            }\n\n            throw new Error('Expected buildPath to be an absolute path');\n\n          case 2:\n            d('rebuilding with args:', buildPath, electronVersion, arch, extraModules, forceRebuild, headerURL, types);\n            prodDeps = {};\n            rebuilds = [];\n            ABI = _nodeAbi2.default.getAbi(electronVersion, 'electron');\n            _context6.next = 8;\n            return locateNodeGyp();\n\n          case 8:\n            nodeGypPath = _context6.sent;\n\n            if (nodeGypPath) {\n              _context6.next = 11;\n              break;\n            }\n\n            throw new Error('Could locate node-gyp');\n\n          case 11:\n\n            (extraModules || []).forEach(function (moduleName) {\n              if (!moduleName) return;\n              prodDeps[moduleName] = true;\n            });\n\n            lifecycle.emit('start');\n\n            rebuildModuleAt = function () {\n              var _ref3 = (0, _bluebird.coroutine)(_regenerator2.default.mark(function _callee3(modulePath) {\n                var _ret;\n\n                return _regenerator2.default.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return _fsPromise2.default.exists(_path2.default.resolve(modulePath, 'binding.gyp'));\n\n                      case 2:\n                        if (!_context3.sent) {\n                          _context3.next = 7;\n                          break;\n                        }\n\n                        return _context3.delegateYield(_regenerator2.default.mark(function _callee2() {\n                          var metaPath, meta, rebuildArgs, modulePackageJSON, moduleName, nodePath, abiPath;\n                          return _regenerator2.default.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  metaPath = _path2.default.resolve(modulePath, 'build', 'Release', '.forge-meta');\n\n                                  lifecycle.emit('module-found', _path2.default.basename(modulePath));\n                                  _context2.t0 = !forceRebuild;\n\n                                  if (!_context2.t0) {\n                                    _context2.next = 7;\n                                    break;\n                                  }\n\n                                  _context2.next = 6;\n                                  return _fsPromise2.default.exists(metaPath);\n\n                                case 6:\n                                  _context2.t0 = _context2.sent;\n\n                                case 7:\n                                  if (!_context2.t0) {\n                                    _context2.next = 16;\n                                    break;\n                                  }\n\n                                  _context2.next = 10;\n                                  return _fsPromise2.default.readFile(metaPath, 'utf8');\n\n                                case 10:\n                                  meta = _context2.sent;\n\n                                  if (!(meta === arch)) {\n                                    _context2.next = 16;\n                                    break;\n                                  }\n\n                                  d('skipping: ' + _path2.default.basename(modulePath) + ' as it is already built');\n                                  lifecycle.emit('module-done');\n                                  lifecycle.emit('module-skip');\n                                  return _context2.abrupt('return', {\n                                    v: void 0\n                                  });\n\n                                case 16:\n                                  d('rebuilding:', _path2.default.basename(modulePath));\n                                  rebuildArgs = ['rebuild', '--target=' + electronVersion, '--arch=' + arch, '--dist-url=' + headerURL, '--build-from-source'];\n                                  _context2.next = 20;\n                                  return (0, _readPackageJson2.default)(modulePath);\n\n                                case 20:\n                                  modulePackageJSON = _context2.sent;\n\n                                  (0, _keys2.default)(modulePackageJSON.binary || {}).forEach(function (binaryKey) {\n                                    var value = modulePackageJSON.binary[binaryKey];\n                                    if (binaryKey === 'module_path') {\n                                      value = _path2.default.resolve(modulePath, value);\n                                    }\n                                    value = value.replace('{configuration}', 'Release').replace('{node_abi}', 'electron-v' + electronVersion.split('.').slice(0, 2).join('.')).replace('{platform}', process.platform).replace('{arch}', arch).replace('{version}', modulePackageJSON.version);\n                                    (0, _keys2.default)(modulePackageJSON.binary).forEach(function (binaryReplaceKey) {\n                                      value = value.replace('{' + binaryReplaceKey + '}', modulePackageJSON.binary[binaryReplaceKey]);\n                                    });\n                                    rebuildArgs.push('--' + binaryKey + '=' + value);\n                                  });\n\n                                  d('rebuilding', _path2.default.basename(modulePath), 'with args', rebuildArgs);\n                                  _context2.next = 25;\n                                  return (0, _spawnRx.spawnPromise)(nodeGypPath, rebuildArgs, {\n                                    cwd: modulePath,\n                                    env: (0, _assign2.default)({}, process.env, {\n                                      HOME: _path2.default.resolve(_os2.default.homedir(), '.electron-gyp'),\n                                      USERPROFILE: _path2.default.resolve(_os2.default.homedir(), '.electron-gyp'),\n                                      npm_config_disturl: 'https://atom.io/download/electron',\n                                      npm_config_runtime: 'electron',\n                                      npm_config_arch: arch,\n                                      npm_config_target_arch: arch,\n                                      npm_config_build_from_source: true\n                                    })\n                                  });\n\n                                case 25:\n\n                                  d('built:', _path2.default.basename(modulePath));\n                                  _context2.next = 28;\n                                  return _fsPromise2.default.mkdirs(_path2.default.dirname(metaPath));\n\n                                case 28:\n                                  _context2.next = 30;\n                                  return _fsPromise2.default.writeFile(metaPath, arch);\n\n                                case 30:\n                                  moduleName = _path2.default.basename(modulePath);\n\n                                  d('searching for .node file', _path2.default.resolve(modulePath, 'build/Release'));\n                                  _context2.t1 = d;\n                                  _context2.next = 35;\n                                  return _fsPromise2.default.readdir(_path2.default.resolve(modulePath, 'build/Release'));\n\n                                case 35:\n                                  _context2.t2 = _context2.sent;\n                                  (0, _context2.t1)('testing files', _context2.t2);\n                                  _context2.t3 = _path2.default;\n                                  _context2.t4 = modulePath;\n                                  _context2.next = 41;\n                                  return _fsPromise2.default.readdir(_path2.default.resolve(modulePath, 'build/Release'));\n\n                                case 41:\n                                  _context2.t5 = function (file) {\n                                    return file !== '.node' && file.endsWith('.node');\n                                  };\n\n                                  _context2.t6 = _context2.sent.find(_context2.t5);\n                                  nodePath = _context2.t3.resolve.call(_context2.t3, _context2.t4, 'build/Release', _context2.t6);\n                                  abiPath = _path2.default.resolve(modulePath, 'bin/' + process.platform + '-' + arch + '-' + ABI);\n                                  _context2.next = 47;\n                                  return _fsPromise2.default.exists(nodePath);\n\n                                case 47:\n                                  if (!_context2.sent) {\n                                    _context2.next = 54;\n                                    break;\n                                  }\n\n                                  d('found .node file', nodePath);\n                                  d('copying to prebuilt place:', abiPath);\n                                  _context2.next = 52;\n                                  return _fsPromise2.default.mkdirs(abiPath);\n\n                                case 52:\n                                  _context2.next = 54;\n                                  return _fsPromise2.default.copy(nodePath, _path2.default.resolve(abiPath, moduleName + '.node'));\n\n                                case 54:\n                                  lifecycle.emit('module-done');\n\n                                case 55:\n                                case 'end':\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2, undefined);\n                        })(), 't0', 4);\n\n                      case 4:\n                        _ret = _context3.t0;\n\n                        if (!((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === \"object\")) {\n                          _context3.next = 7;\n                          break;\n                        }\n\n                        return _context3.abrupt('return', _ret.v);\n\n                      case 7:\n                      case 'end':\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, undefined);\n              }));\n\n              return function rebuildModuleAt(_x10) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            rebuildAllModulesIn = function rebuildAllModulesIn(nodeModulesPath) {\n              var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n              d('scanning:', nodeModulesPath);\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                var _loop = function _loop() {\n                  var modulePath = _step.value;\n\n                  if (prodDeps['' + prefix + modulePath]) {\n                    rebuilds.push(function () {\n                      return rebuildModuleAt(_path2.default.resolve(nodeModulesPath, modulePath));\n                    });\n                  }\n                  if (modulePath.startsWith('@')) {\n                    rebuildAllModulesIn(_path2.default.resolve(nodeModulesPath, modulePath), modulePath + '/');\n                  }\n                  if (_fsPromise2.default.existsSync(_path2.default.resolve(nodeModulesPath, modulePath, 'node_modules'))) {\n                    rebuildAllModulesIn(_path2.default.resolve(nodeModulesPath, modulePath, 'node_modules'));\n                  }\n                };\n\n                for (var _iterator = (0, _getIterator3.default)(_fsPromise2.default.readdirSync(nodeModulesPath)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  _loop();\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n            };\n\n            findModule = function () {\n              var _ref4 = (0, _bluebird.coroutine)(_regenerator2.default.mark(function _callee4(moduleName, fromDir, foundFn) {\n                var targetDir, foundFns, testPath;\n                return _regenerator2.default.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        targetDir = fromDir;\n                        foundFns = [];\n\n                      case 2:\n                        if (!(targetDir !== _path2.default.dirname(buildPath))) {\n                          _context4.next = 11;\n                          break;\n                        }\n\n                        testPath = _path2.default.resolve(targetDir, 'node_modules', moduleName);\n                        _context4.next = 6;\n                        return _fsPromise2.default.exists(testPath);\n\n                      case 6:\n                        if (!_context4.sent) {\n                          _context4.next = 8;\n                          break;\n                        }\n\n                        foundFns.push(foundFn(testPath));\n\n                      case 8:\n                        targetDir = _path2.default.dirname(targetDir);\n                        _context4.next = 2;\n                        break;\n\n                      case 11:\n                        _context4.next = 13;\n                        return _promise2.default.all(foundFns);\n\n                      case 13:\n                      case 'end':\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, undefined);\n              }));\n\n              return function findModule(_x12, _x13, _x14) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            markChildrenAsProdDeps = function () {\n              var _ref5 = (0, _bluebird.coroutine)(_regenerator2.default.mark(function _callee5(modulePath) {\n                var childPackageJSON, moduleWait;\n                return _regenerator2.default.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.next = 2;\n                        return _fsPromise2.default.exists(modulePath);\n\n                      case 2:\n                        if (_context5.sent) {\n                          _context5.next = 4;\n                          break;\n                        }\n\n                        return _context5.abrupt('return');\n\n                      case 4:\n                        d('exploring', modulePath);\n                        _context5.next = 7;\n                        return (0, _readPackageJson2.default)(modulePath);\n\n                      case 7:\n                        childPackageJSON = _context5.sent;\n                        moduleWait = [];\n\n\n                        (0, _keys2.default)(childPackageJSON.dependencies || {}).concat((0, _keys2.default)(childPackageJSON.optionalDependencies || {})).forEach(function (key) {\n                          if (prodDeps[key]) return;\n                          prodDeps[key] = true;\n                          moduleWait.push(findModule(key, modulePath, markChildrenAsProdDeps));\n                        });\n                        _context5.next = 12;\n                        return _promise2.default.all(moduleWait);\n\n                      case 12:\n                      case 'end':\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, undefined);\n              }));\n\n              return function markChildrenAsProdDeps(_x15) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            _context6.next = 19;\n            return (0, _readPackageJson2.default)(buildPath);\n\n          case 19:\n            rootPackageJSON = _context6.sent;\n            markWaiters = [];\n            depKeys = [];\n\n            if (types.indexOf('prod') !== -1) {\n              depKeys.push.apply(depKeys, (0, _toConsumableArray3.default)((0, _keys2.default)(rootPackageJSON.dependencies || {})));\n            }\n            if (types.indexOf('optional') !== -1) {\n              depKeys.push.apply(depKeys, (0, _toConsumableArray3.default)((0, _keys2.default)(rootPackageJSON.optionalDependencies || {})));\n            }\n            if (types.indexOf('dev') !== -1) {\n              depKeys.push.apply(depKeys, (0, _toConsumableArray3.default)((0, _keys2.default)(rootPackageJSON.devDependencies || {})));\n            }\n            depKeys.forEach(function (key) {\n              prodDeps[key] = true;\n              markWaiters.push(markChildrenAsProdDeps(_path2.default.resolve(buildPath, 'node_modules', key)));\n            });\n\n            _context6.next = 28;\n            return _promise2.default.all(markWaiters);\n\n          case 28:\n\n            d('identified prod deps:', prodDeps);\n\n            rebuildAllModulesIn(_path2.default.resolve(buildPath, 'node_modules'));\n\n            if (!(mode !== 'sequential')) {\n              _context6.next = 35;\n              break;\n            }\n\n            _context6.next = 33;\n            return _promise2.default.all(rebuilds.map(function (fn) {\n              return fn();\n            }));\n\n          case 33:\n            _context6.next = 61;\n            break;\n\n          case 35:\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _iteratorError2 = undefined;\n            _context6.prev = 38;\n            _iterator2 = (0, _getIterator3.default)(rebuilds);\n\n          case 40:\n            if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n              _context6.next = 47;\n              break;\n            }\n\n            rebuildFn = _step2.value;\n            _context6.next = 44;\n            return rebuildFn();\n\n          case 44:\n            _iteratorNormalCompletion2 = true;\n            _context6.next = 40;\n            break;\n\n          case 47:\n            _context6.next = 53;\n            break;\n\n          case 49:\n            _context6.prev = 49;\n            _context6.t0 = _context6['catch'](38);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context6.t0;\n\n          case 53:\n            _context6.prev = 53;\n            _context6.prev = 54;\n\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n\n          case 56:\n            _context6.prev = 56;\n\n            if (!_didIteratorError2) {\n              _context6.next = 59;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 59:\n            return _context6.finish(56);\n\n          case 60:\n            return _context6.finish(53);\n\n          case 61:\n          case 'end':\n            return _context6.stop();\n        }\n      }\n    }, _callee6, undefined, [[38, 49, 53, 61], [54,, 56, 60]]);\n  }));\n\n  return function _rebuild(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar rebuild = function rebuild() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var lifecycle = new _events2.default();\n  d('rebuilding with args:', args);\n  var rebuilder = _rebuild.apply(undefined, [lifecycle].concat(args));\n  rebuilder.lifecycle = lifecycle;\n  return rebuilder;\n};\n\nvar rebuildNativeModules = exports.rebuildNativeModules = function rebuildNativeModules(electronVersion, modulePath) {\n  var whichModule = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var headersDir = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var arch = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : process.arch;\n  var command = arguments[5];\n  var ignoreDevDeps = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n  var ignoreOptDeps = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n  var verbose = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n\n  if (_path2.default.basename(modulePath) === 'node_modules') {\n    modulePath = _path2.default.dirname(modulePath);\n  }\n  d('rebuilding in:', modulePath);\n  console.warn('You are using the old API, please read the new docs and update to the new API');\n  return rebuild(modulePath, electronVersion, arch, whichModule.split(','));\n};\n\nexports.default = rebuild;","/home/travis/build/npmtest/node-npmtest-electron-rebuild/node_modules/electron-rebuild/lib/read-package-json.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _bluebird = require('bluebird');\n\nvar _fsPromise = require('fs-promise');\n\nvar _fsPromise2 = _interopRequireDefault(_fsPromise);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  var _ref = (0, _bluebird.coroutine)(_regenerator2.default.mark(function _callee(dir) {\n    var safe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var packageData;\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            packageData = void 0;\n            _context.prev = 1;\n            _context.next = 4;\n            return _fsPromise2.default.readFile(_path2.default.resolve(dir, 'package.json'), 'utf8');\n\n          case 4:\n            packageData = _context.sent;\n            _context.next = 14;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context['catch'](1);\n\n            if (!safe) {\n              _context.next = 13;\n              break;\n            }\n\n            packageData = '{}';\n            _context.next = 14;\n            break;\n\n          case 13:\n            throw _context.t0;\n\n          case 14:\n            return _context.abrupt('return', JSON.parse(packageData));\n\n          case 15:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined, [[1, 7]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","/home/travis/build/npmtest/node-npmtest-electron-rebuild/node_modules/electron-rebuild/lib/cli.js":"#!/usr/bin/env node\n'use strict';\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _bluebird = require('bluebird');\n\nrequire('colors');\n\nvar _fsPromise = require('fs-promise');\n\nvar _fsPromise2 = _interopRequireDefault(_fsPromise);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _ora = require('ora');\n\nvar _ora2 = _interopRequireDefault(_ora);\n\nvar _rebuild = require('./rebuild.js');\n\nvar _rebuild2 = _interopRequireDefault(_rebuild);\n\nvar _electronLocater = require('./electron-locater');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar yargs = require('yargs').usage('Usage: electron-rebuild --version [version] --module-dir [path]').help('h').alias('h', 'help').describe('v', 'The version of Electron to build against').alias('v', 'version').describe('f', 'Force rebuilding modules, even if we would skip it otherwise').alias('f', 'force').describe('a', \"Override the target architecture to something other than your system's\").alias('a', 'arch').describe('m', 'The path to the node_modules directory to rebuild').alias('m', 'module-dir').describe('w', 'A specific module to build, or comma separated list of modules').alias('w', 'which-module').describe('e', 'The path to electron-prebuilt').alias('e', 'electron-prebuilt-dir').describe('d', 'Custom header tarball URL').alias('d', 'dist-url').describe('t', 'The types of dependencies to rebuild.  Comma seperated list of \"prod\", \"dev\" and \"optional\".  Default is \"prod,optional\"').alias('t', 'types').describe('p', 'Rebuild in parallel, this is enabled by default on macOS and Linux').alias('p', 'parallel').describe('s', 'Rebuild modules sequentially, this is enabled by default on Windows').alias('s', 'sequential').epilog('Copyright 2016');\n\nvar argv = yargs.argv;\n\nif (argv.h) {\n  yargs.showHelp();\n  process.exit(0);\n}\n\nvar handler = function handler(err) {\n  console.error('An unhandled error occurred inside electron-rebuild'.red);\n  console.error((err.message + '\\n\\n' + err.stack).red);\n  process.exit(-1);\n};\nprocess.on('uncaughtException', handler);\nprocess.on('unhandledRejection', handler);\n\n(0, _bluebird.coroutine)(_regenerator2.default.mark(function _callee() {\n  var electronPrebuiltPath, electronPrebuiltVersion, pkgJson, rootDirectory, modulesDone, moduleTotal, rebuildSpinner, lastModuleName, redraw, rebuilder, lifecycle;\n  return _regenerator2.default.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          electronPrebuiltPath = argv.e ? _path2.default.resolve(process.cwd(), argv.e) : (0, _electronLocater.locateElectronPrebuilt)();\n          electronPrebuiltVersion = argv.v;\n\n          if (electronPrebuiltVersion) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.prev = 3;\n          pkgJson = require(_path2.default.join(electronPrebuiltPath, 'package.json'));\n\n\n          electronPrebuiltVersion = pkgJson.version;\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context['catch'](3);\n          throw new Error('Unable to find electron-prebuilt\\'s version number, either install it or specify an explicit version');\n\n        case 11:\n          rootDirectory = argv.m;\n\n          if (rootDirectory) {\n            _context.next = 34;\n            break;\n          }\n\n          // NB: We assume here that we're going to rebuild the immediate parent's\n          // node modules, which might not always be the case but it's at least a\n          // good guess\n          rootDirectory = _path2.default.resolve(__dirname, '../../..');\n          _context.next = 16;\n          return _fsPromise2.default.exists(rootDirectory);\n\n        case 16:\n          _context.t1 = !_context.sent;\n\n          if (_context.t1) {\n            _context.next = 21;\n            break;\n          }\n\n          _context.next = 20;\n          return _fsPromise2.default.exists(_path2.default.resolve(rootDirectory, 'package.json'));\n\n        case 20:\n          _context.t1 = !_context.sent;\n\n        case 21:\n          if (!_context.t1) {\n            _context.next = 32;\n            break;\n          }\n\n          // Then we try the CWD\n          rootDirectory = process.cwd();\n          _context.next = 25;\n          return _fsPromise2.default.exists(rootDirectory);\n\n        case 25:\n          _context.t2 = !_context.sent;\n\n          if (_context.t2) {\n            _context.next = 30;\n            break;\n          }\n\n          _context.next = 29;\n          return _fsPromise2.default.exists(_path2.default.resolve(rootDirectory, 'package.json'));\n\n        case 29:\n          _context.t2 = !_context.sent;\n\n        case 30:\n          if (!_context.t2) {\n            _context.next = 32;\n            break;\n          }\n\n          throw new Error('Unable to find parent node_modules directory, specify it via --module-dir, E.g. \"--module-dir .\" for the current directory');\n\n        case 32:\n          _context.next = 35;\n          break;\n\n        case 34:\n          rootDirectory = _path2.default.resolve(process.cwd(), rootDirectory);\n\n        case 35:\n          modulesDone = 0;\n          moduleTotal = 0;\n          rebuildSpinner = (0, _ora2.default)('Searching dependency tree').start();\n          lastModuleName = void 0;\n\n          redraw = function redraw(moduleName) {\n            if (moduleName) lastModuleName = moduleName;\n            if (argv.p) {\n              rebuildSpinner.text = 'Building modules: ' + modulesDone + '/' + moduleTotal;\n            } else {\n              rebuildSpinner.text = 'Building module: ' + lastModuleName + ', Completed: ' + modulesDone;\n            }\n          };\n\n          rebuilder = (0, _rebuild2.default)(rootDirectory, electronPrebuiltVersion, argv.a || process.arch, argv.w ? argv.w.split(',') : [], argv.f, argv.d, argv.t ? argv.t.split(',') : ['prod', 'dev'], argv.p ? 'parallel' : argv.s ? 'sequential' : undefined);\n          lifecycle = rebuilder.lifecycle;\n\n          lifecycle.on('module-found', function (moduleName) {\n            moduleTotal += 1;\n            redraw(moduleName);\n          });\n          lifecycle.on('module-done', function () {\n            modulesDone += 1;\n            redraw();\n          });\n          _context.prev = 44;\n          _context.next = 47;\n          return rebuilder;\n\n        case 47:\n          _context.next = 54;\n          break;\n\n        case 49:\n          _context.prev = 49;\n          _context.t3 = _context['catch'](44);\n\n          rebuildSpinner.text = 'Rebuild Failed';\n          rebuildSpinner.fail();\n          throw _context.t3;\n\n        case 54:\n          rebuildSpinner.text = 'Rebuild Complete';\n          rebuildSpinner.succeed();\n\n        case 56:\n        case 'end':\n          return _context.stop();\n      }\n    }\n  }, _callee, undefined, [[3, 8], [44, 49]]);\n}))();","/home/travis/build/npmtest/node-npmtest-electron-rebuild/node_modules/electron-rebuild/lib/electron-locater.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.locateElectronPrebuilt = locateElectronPrebuilt;\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar possibleModuleNames = ['electron', 'electron-prebuilt', 'electron-prebuilt-compile'];\n\nfunction locateElectronPrebuilt() {\n  var electronPath = void 0;\n\n  // Attempt to locate modules by path\n  var foundModule = possibleModuleNames.some(function (moduleName) {\n    electronPath = _path2.default.join(__dirname, '..', '..', moduleName);\n    return _fs2.default.existsSync(electronPath);\n  });\n\n  // Return a path if we found one\n  if (foundModule) return electronPath;\n\n  // Attempt to locate modules by require\n  foundModule = possibleModuleNames.some(function (moduleName) {\n    try {\n      electronPath = _path2.default.join(require.resolve(moduleName), '..');\n    } catch (e) {\n      return false;\n    }\n    return _fs2.default.existsSync(electronPath);\n  });\n\n  // Return a path if we found one\n  if (foundModule) return electronPath;\n  return null;\n}","/home/travis/build/npmtest/node-npmtest-electron-rebuild/node_modules/electron-rebuild/src/main.js":"export { default, rebuildNativeModules } from './rebuild';\r\n\r\nexport const installNodeHeaders = () => Promise.resolve();\r\nexport const shouldRebuildNativeModules  = () => Promise.resolve(true);\r\nexport const preGypFixRun = () => Promise.resolve();"}